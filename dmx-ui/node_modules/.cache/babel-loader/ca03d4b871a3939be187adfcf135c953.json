{"remainingRequest":"/home/erak/Dev/deep-dance/view/dmx-ui/node_modules/thread-loader/dist/cjs.js!/home/erak/Dev/deep-dance/view/dmx-ui/node_modules/babel-loader/lib/index.js!/home/erak/Dev/deep-dance/view/dmx-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/erak/Dev/deep-dance/view/dmx-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/erak/Dev/deep-dance/view/dmx-ui/src/components/Upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/erak/Dev/deep-dance/view/dmx-ui/src/components/Upload.vue","mtime":1622074549344},{"path":"/home/erak/Dev/deep-dance/view/dmx-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/erak/Dev/deep-dance/view/dmx-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/erak/Dev/deep-dance/view/dmx-ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/erak/Dev/deep-dance/view/dmx-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/erak/Dev/deep-dance/view/dmx-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVXBsb2FkIiwKICBwcm9wczogWydkYXRhS2V5J10sCiAgY29tcG9uZW50czoge30sCiAgbWV0aG9kczogewogICAgb25GaWxlQ2hhbmdlOiBmdW5jdGlvbiBvbkZpbGVDaGFuZ2UoZSkgewogICAgICB2YXIgZmlsZXMgPSBlLnRhcmdldC5maWxlcyB8fCBlLmRhdGFUcmFuc2Zlci5maWxlczsKICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSB0aGlzLm9uUmVhZGVyTG9hZDsKICAgICAgcmVhZGVyLnJlYWRBc1RleHQoZmlsZXNbMF0pOwogICAgICB0aGlzLiRzdG9yZS5jb21taXQoIlNldEN1cnJlbnRGaWxlbmFtZSIsIHsKICAgICAgICBkYXRhOiBmaWxlc1swXS5uYW1lLAogICAgICAgIGtleTogdGhpcy5kYXRhS2V5CiAgICAgIH0pOwogICAgfSwKICAgIG9uUmVhZGVyTG9hZDogZnVuY3Rpb24gb25SZWFkZXJMb2FkKGV2ZW50KSB7CiAgICAgIHZhciBvYmogPSBKU09OLnBhcnNlKGV2ZW50LnRhcmdldC5yZXN1bHQpOwogICAgICB0aGlzLiRzdG9yZS5jb21taXQoIlNldEpTT05EYXRhIiwgewogICAgICAgIGRhdGE6IG9iaiwKICAgICAgICBrZXk6IHRoaXMuZGF0YUtleQogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,KAAA,EAAA,CAAA,SAAA,CAFA;AAGA,EAAA,UAAA,EAAA,EAHA;AAIA,EAAA,OAAA,EAAA;AACA,IAAA,YAAA,EAAA,SAAA,YAAA,CAAA,CAAA,EAAA;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,CAAA,CAAA,YAAA,CAAA,KAAA;AACA,UAAA,MAAA,GAAA,IAAA,UAAA,EAAA;AACA,MAAA,MAAA,CAAA,MAAA,GAAA,KAAA,YAAA;AACA,MAAA,MAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,oBAAA,EAAA;AAAA,QAAA,IAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA;AAAA,QAAA,GAAA,EAAA,KAAA;AAAA,OAAA;AACA,KAPA;AAQA,IAAA,YAAA,EAAA,sBAAA,KAAA,EAAA;AACA,UAAA,GAAA,GAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,aAAA,EAAA;AAAA,QAAA,IAAA,EAAA,GAAA;AAAA,QAAA,GAAA,EAAA,KAAA;AAAA,OAAA;AACA;AAXA;AAJA,CAAA","sourcesContent":["<template>\n  <div id=\"json-upload\" class=\"upload\">\n    <div class=\"frames\">\n        {{ this.$store.state.filename[this.dataKey].toString() ? \n          this.$store.state.filename[this.dataKey] : \n          \"No file selected...\" \n        }}  \n    </div>\n    <label\n      :for=\"'json-file-upload'+this.dataKey\"\n      :class=\"'btn btn-primary custom-file-upload left '+this.dataKey\"\n    >\n      <i class=\"fa fa-cloud-upload\"></i>&#11149;\n    </label>\n    <input\n      type=\"file\"\n      :id=\"'json-file-upload'+this.dataKey\"\n      value=\"Import\"\n      @change=\"onFileChange\"\n    />\n    <br />\n    \n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Upload\",\n  props: ['dataKey'],\n  components: {},\n  methods: {\n    onFileChange: function onFileChange(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      var reader = new FileReader();\n      reader.onload = this.onReaderLoad;\n      reader.readAsText(files[0]);\n      this.$store.commit(\"SetCurrentFilename\", {data:files[0].name, key:this.dataKey});\n    },\n    onReaderLoad: function (event) {\n      var obj = JSON.parse(event.target.result);\n      this.$store.commit(\"SetJSONData\", {data:obj,key:this.dataKey});\n    },\n  },\n};\n</script>\n\n<style>\n.upload {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  margin: auto;\n  margin-bottom: 20px;\n}\ninput[type=\"file\"] {\n  display: none;\n}\n.custom-file-upload {\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 6px 12px;\n  cursor: pointer;\n}\n.filename {\n  margin: 10px 10px;\n}\n\n.red {\n  background-color: #32bea6 !important;\n}\n.frames {\n  /* margin: 0px 10px 0 10px; */\n  color: #32bea6;\n  width: 83%;\n  height: 40px;\n  /* width: 100%; */\n  /* text-align: center; */\n  float: left;\n  border: 1px solid #32bea6;\n  padding: 7px 10px 0 0;\n  text-align: right;\n}\n.btn-primary {\n  width: 15%;\n  /* margin-left: 10px; */\n}\n\n.upload .btn-primary {\n  float: right;\n}\n\n/* @media only screen and (max-width: 500px) {\n  .upload {\n    width: 100%;\n  }\n  .btn-primary {\n    width: 25%;\n  }\n} */\n</style>\n"],"sourceRoot":"src/components"}]}