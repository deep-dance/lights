{"remainingRequest":"/home/erak/Dev/deep-dance/view/dmx-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/erak/Dev/deep-dance/view/dmx-ui/src/components/ProgressBar.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/erak/Dev/deep-dance/view/dmx-ui/src/components/ProgressBar.vue","mtime":1622074588095},{"path":"/home/erak/Dev/deep-dance/view/dmx-ui/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/erak/Dev/deep-dance/view/dmx-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/erak/Dev/deep-dance/view/dmx-ui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/erak/Dev/deep-dance/view/dmx-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/erak/Dev/deep-dance/view/dmx-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI3Byb2dyZXNzYmFyLW91dGVyIHsKICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOwogIHdpZHRoOiA5NSU7CiAgLyogd2lkdGg6IDcwMHB4OyAqLwogIGhlaWdodDogMjVweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjIyMjIyOwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBtYXJnaW46IDAgMCAwIDEwcHg7Cn0KQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MDBweCkgewogICNwcm9ncmVzc2Jhci1vdXRlciB7CiAgICB3aWR0aDogODAlOwogIH0KfQoucHJvZ3Jlc3NiYXItaW5uZXIgewogIGhlaWdodDogMjBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzJiZWE2Owp9CgouYWN0aXZlIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjI4NDAwOwp9Cg=="},{"version":3,"sources":["ProgressBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"ProgressBar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"progressbar-outer\" ref=\"progressbar\" @click=SetFrame>\n    <div\n      class=\"progressbar-inner\"\n      v-bind:class=\"{ active: this.$store.state.isPlaying }\"\n      :style=\"{ width: progressWidth + 'px' }\"\n    ></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"ProgressBar\",\n  components: {},\n  computed: {\n    currentClipLength: function () {\n      return Object.keys(this.$store.state.currentJSONData['red'].positions).length *\n        this.$store.state.fps;\n    },\n    progressWidth: function () {\n      var currentFrame = this.$store.state.currentFrame;\n      var maxWidth = this.$refs.progressbar ? this.$refs.progressbar.clientWidth : 500;\n      return (maxWidth * currentFrame) / this.currentClipLength;\n    },\n  },\n\n  methods: {\n    SetFrame(event) {\n        var x = event.clientX - this.$refs.progressbar.getBoundingClientRect().left;\n        var maxWidth = this.$refs.progressbar.clientWidth;\n        var frame = Math.round((this.currentClipLength * x) / maxWidth);\n        console.log('progress', frame);\n        this.$store.commit(\"SetCurrentFrame\", frame);\n    },\n  },\n  mounted() {\n\n  },\n};\n</script>\n\n<style>\n#progressbar-outer {\n  vertical-align: middle;\n  width: 95%;\n  /* width: 700px; */\n  height: 25px;\n  background-color: #222222;\n  display: inline-block;\n  margin: 0 0 0 10px;\n}\n@media only screen and (max-width: 500px) {\n  #progressbar-outer {\n    width: 80%;\n  }\n}\n.progressbar-inner {\n  height: 20px;\n  background-color: #32bea6;\n}\n\n.active {\n  background-color: #f28400;\n}\n</style>\n"]}]}