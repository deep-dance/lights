{"remainingRequest":"/home/erak/Dev/deep-dance/view/dmx-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/erak/Dev/deep-dance/view/dmx-ui/src/components/DMXSender.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/erak/Dev/deep-dance/view/dmx-ui/src/components/DMXSender.vue","mtime":1622218250096},{"path":"/home/erak/Dev/deep-dance/view/dmx-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/erak/Dev/deep-dance/view/dmx-ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/erak/Dev/deep-dance/view/dmx-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/erak/Dev/deep-dance/view/dmx-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["DMXSender.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAofile":"DMXSender.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"dmx-sender\">\n    <h5>Direct</h5>\n    <b-button\n      variant=\"primary\"\n      class=\"mt-2 left\"\n      v-bind:class=\"{ btn_active: this.$store.state.dmxActive }\"\n      @click=\"directOff()\"\n    >Off</b-button>\n    <b-button\n      variant=\"primary\"\n      class=\"mt-2 left\"\n      v-bind:class=\"{ btn_active: this.$store.state.dmxActive }\"\n      @click=\"directWhite()\"\n    >White</b-button>\n    \n  </div>\n</template>\n\n<script>\nconst http = require('http')\nconst Queue = require('queue-fifo');\n\nconst led_count = 108;\n\nconst performance_hp1 = [\n  {\n    start: 0,               // 0:00\n    end: 7500,              // 5:00\n    from: 'ffffffffff00',   // White\n    to: 'ffffffffff00',     // White\n    animated: false,\n    fade: 500,\n  },\n  {\n    start: 7500,            // 5:00\n    end: 42000,             // 28:00\n    from: 'ffffffffff00',   // White\n    to: '00000000ff00',     // Amber\n    animated: true,\n    fade: 500,\n  },\n  {\n    start: 42000,           // 28:00\n    end: 49500,             // 33:00\n    from: '00000000ff00',   // Amber\n    to: '00000000ff00',     // Amber\n    animated: true,\n    fade: 500,\n  },\n  {\n    start: 49500,           // 33:00\n    end: 57000,             // 38:00\n    from: '00000000ff00',   // Amber\n    to: '00000000ffff',     // Amber+UV\n    animated: true,\n    fade: 500,\n  },\n  {\n    start: 57000,           // 38:00\n    end: 60000,             // 40:00\n    from: '00000000ffff',     // Amber+UV\n    to: '0000000000ff',     // UV\n    animated: false,\n    fade: 500,\n  },\n  {\n    start: 60000,           // 40:00\n    end: 63000,             // 42:00\n    from: '0000000000ff',     // UV\n    to: '0000000000ff',     // UV\n    animated: false,\n    fade: 500,\n  },\n  {\n    start: 63000,           // 42:00\n    end: 90025,             // 60:02\n    from: '0000000000ff',     // UV\n    to: 'ff00000000ff',     // Red+UV\n    animated: true,\n    fade: 500,\n  }\n]\n\nconst performance_hp2 = [\n  {\n    start: 0,               // 0:00\n    end: 7500,              // 5:00\n    from: 'ffffffffff00',   // White\n    to: 'ffffffffff00',     // White\n    animated: false,\n    fade: 500,\n  },\n  {\n    start: 7500,            // 5:00\n    end: 46500,             // 31:00\n    from: 'ffffffffff00',   // White\n    to: '00000000ff00',     // Amber\n    animated: true,\n    fade: 500,\n  },\n  {\n    start: 46500,           // 31:00\n    end: 49500,             // 33:00\n    from: '00000000ff00',   // Amber\n    to: '00000000ff00',     // Amber\n    animated: true,\n    fade: 500,\n  },\n  {\n    start: 49500,           // 33:00\n    end: 63000,             // 42:00\n    from: '00000000ff00',   // Amber\n    to: '00000000ee33',     // UV\n    animated: true,\n    fade: 500,\n  },\n  {\n    start: 63000,           // 42:00\n    end: 67500,             // 45:00\n    from: '00000000ee33',   // UV\n    to: '0000000000ff',     // UV\n    animated: false,\n    fade: 500,\n  },\n  {\n    start: 67500,           // 45:00\n    end: 72000,             // 48:00\n    from: '0000000000ff',   // UV\n    to: '0000000000ff',     // UV\n    animated: false,\n    fade: 500,\n  },\n  {\n    start: 72000,           // 48:00\n    end: 87000,             // 58:00\n    from: '0000000000ff',   // UV\n    to: 'ff00005500ff',     // Red+White+UV\n    animated: true,\n    fade: 500,\n  },\n  {\n    start: 87000,           // 58:00\n    end: 90025,             // 60:01\n    from: 'ff00005500ff',   // Red+White+UV\n    to: 'ff00005500ff',     // Red+White+UV\n    animated: true,\n    fade: 500,\n  },\n];\n\nconst performance_gp = [\n  {\n    start: 0,               // 0:00\n    end: 7500,              // 5:00\n    from: 'ffffffffff00',   // White\n    to: 'ffffffffff00',     // White\n    animated: false,\n    fade: 500, \n  },\n  {\n    start: 7500,            // 5:00\n    end: 29850,             // 19:52\n    from: 'ffffffffff00',   // White\n    to: '00000000ff00',     // Amber\n    animated: true,\n    fade: 500,\n  },\n  {\n    start: 29850,           // 19:52\n    end: 30000,             // 20:00\n    from: '000000000000',   // Black\n    to: '000000000000',     // Black\n    animated: true,\n    fade: 500,\n  },\n  // Flash / Glitch - Start\n  {\n    start: 30000,           // 20:00\n    end: 30025,             // 20:01\n    from: '000000000000',   // Black\n    to: 'ffffffffff00',     // White\n    animated: false,\n    fade: 500,\n  },\n  {\n    start: 30000,           // 20:00\n    end: 30050,             // 20:02\n    from: '000000000000',   // Black\n    to: 'ffffffffff00',     // White\n    animated: false,\n    fade: 500,\n  },\n  {\n    start: 30000,           // 20:00\n    end: 30075,             // 20:03\n    from: 'ffffffffff00',   // White\n    to: '000000000000',     // Black\n    animated: false,\n    fade: 500,\n  },\n  {\n    start: 30075,           // 20:03\n    end: 46500,             // 31:00\n    from: 'ffffffffff00',   // White\n    to: '00000000ff00',     // Amber\n    animated: true,\n    fade: 500,\n  },\n  // Flash / Glitch - End\n  {\n    start: 46500,           // 31:00\n    end: 48000,             // 32:00\n    from: '00000000ff00',   // Amber\n    to: '00000000ff00',     // Amber\n    animated: true,\n    fade: 500,\n  },\n  {\n    start: 48000,           // 32:00\n    end: 54000,             // 36:00\n    from: '00000000ff00',   // Amber\n    to: '00000000ffff',     // Amber+UV\n    animated: true,\n    fade: 500,\n  },\n  // \n  // \n  {\n    start: 54000,           // 36:00\n    end: 63000,             // 42:00\n    from: '00000000ffff',   // Amber+UV\n    to: '00000000aaee',     // Amber+UV\n    animated: true,\n    fade: 500,\n  },\n  {\n    start: 63000,           // 42:00\n    end: 67500,             // 45:00\n    from: '00000000aaee',   // Amber+UV\n    to: '0000000000ff',     // UV\n    animated: false,\n    fade: 500,\n  },\n  {\n    start: 67500,           // 45:00\n    end: 72000,             // 48:00\n    from: '0000000000ff',   // UV\n    to: '0000000000ff',     // UV\n    animated: false,\n    fade: 500,\n  },\n  {\n    start: 72000,           // 48:00\n    end: 87000,             // 58:00\n    from: '0000000000ff',   // UV\n    to: 'ff00005500ff',     // Red+White+UV\n    animated: true,\n    fade: 500,\n  },\n  {\n    start: 87000,           // 58:00\n    end: 90025,             // 60:01\n    from: 'ff00005500ff',   // Red+White+UV\n    to: 'ff00005500ff',     // Red+White+UV\n    animated: true,\n    fade: 500,\n  },\n];\n\nconst premiere = [\n  {\n    start: 0,               // 0:00\n    end: 7500,              // 5:00\n    from: 'ffffffffff00',   // White\n    to: 'ffffffffff00',     // White\n    animated: false,\n    fade: 500, \n  },\n  {\n    start: 7500,            // 5:00\n    end: 29850,             // 19:52\n    from: 'ffffffffff00',   // White\n    to: '00000000ff00',     // Amber\n    animated: true,\n    fade: 500,\n  },\n  {\n    start: 29850,           // 19:52\n    end: 30000,             // 20:00\n    from: '000000000000',   // Black\n    to: '000000000000',     // Black\n    animated: true,\n    fade: 500,\n  },\n  // Flash / Glitch - Start\n  {\n    start: 30000,           // 20:00\n    end: 30025,             // 20:01\n    from: '000000000000',   // Black\n    to: 'ffffffffff00',     // White\n    animated: false,\n    fade: 500,\n  },\n  {\n    start: 30000,           // 20:00\n    end: 30050,             // 20:02\n    from: '000000000000',   // Black\n    to: 'ffffffffff00',     // White\n    animated: false,\n    fade: 500,\n  },\n  {\n    start: 30000,           // 20:00\n    end: 30075,             // 20:03\n    from: 'ffffffffff00',   // White\n    to: '000000000000',     // Black\n    animated: false,\n    fade: 500,\n  },\n  {\n    start: 30075,           // 20:03\n    end: 46500,             // 31:00\n    from: 'ffffffffff00',   // White\n    to: '00000000ff00',     // Amber\n    animated: true,\n    fade: 500,\n  },\n  // Flash / Glitch - End\n  {\n    start: 46500,           // 31:00\n    end: 48000,             // 32:00\n    from: '00000000ff00',   // Amber\n    to: '00000000ff00',     // Amber\n    animated: true,\n    fade: 500,\n  },\n  {\n    start: 48000,           // 32:00\n    end: 54000,             // 36:00\n    from: '00000000ff00',   // Amber\n    to: '00000000ffff',     // Amber+UV\n    animated: true,\n    fade: 500,\n  },\n  // \n  // \n  {\n    start: 54000,           // 36:00\n    end: 63000,             // 42:00\n    from: '00000000ffff',   // Amber+UV\n    to: '00000000aaee',     // Amber+UV\n    animated: true,\n    fade: 500,\n  },\n  {\n    start: 63000,           // 42:00\n    end: 67500,             // 45:00\n    from: '00000000aaee',   // Amber+UV\n    to: '0000000000ff',     // UV\n    animated: false,\n    fade: 500,\n  },\n  {\n    start: 67500,           // 45:00\n    end: 72000,             // 48:00\n    from: '0000000000ff',   // UV\n    to: '0000000000ff',     // UV\n    animated: false,\n    fade: 500,\n  },\n  {\n    start: 72000,           // 48:00\n    end: 79500,             // 53:00\n    from: '0000000000ff',   // UV\n    to: '550000550055',     // Red+White+UV\n    animated: true,\n    fade: 500,\n  },\n  {\n    start: 79500,           // 53:00\n    end: 87000,             // 58:00\n    from: 'bbbbbbbbbb00',   // white\n    to: 'ff00005500ff',     // Red+White+UV\n    animated: true,\n    fade: 500,\n  },\n  {\n    start: 87000,           // 58:00\n    end: 90025,             // 60:01\n    from: 'ff00005500ff',   // Red+White+UV\n    to: 'ff00005500ff',     // Red+White+UV\n    animated: true,\n    fade: 500,\n  },\n];\n\nexport default {\n  name: \"DMXSender\",\n  components: {},\n  data: function () {\n    return {\n      clock: null,\n      delta: 0,\n      start: Date.now(),\n      frame: 0,\n      leds: new Array(led_count),\n      lruThreshold: 6,\n      lruLEDs: new Queue(),\n      lastLED: 0,\n      colorStart: 'ffffffffff00',\n      animations: [],\n      keyframes: premiere,\n    };\n  },\n  methods: {\n    map: function(value, x1, y1, x2, y2) {\n      return (value - x1) * (y2 - x2) / (y1 - x1) + x2;\n    },\n    intToHex: function(num) {\n      var hex = Math.round(num).toString(16);\n      if (hex.length == 1)\n        hex = '0' + hex;\n      return hex;\n    },\n    parseRGB: function(color) {\n      return color.substring(0, 6);\n    },\n    parseWAUV: function(color) {\n      return color.substring(6, 12);\n    },\n    blendColors: function(color1, color2, percentage) {\n      // check input\n      color1 = color1 || '#000000';\n      color2 = color2 || '#ffffff';\n      percentage = percentage || 0.5;\n\n      // 1: validate input, make sure we have provided a valid hex\n      if (color1.length != 4 && color1.length != 7)\n        throw new Error('colors must be provided as hexes');\n\n      if (color2.length != 4 && color2.length != 7)\n        throw new Error('colors must be provided as hexes');    \n\n      if (percentage > 1 || percentage < 0)\n        throw new Error('percentage must be between 0 and 1');\n\n      // 2: check to see if we need to convert 3 char hex to 6 char hex, else slice off hash\n      //      the three character hex is just a representation of the 6 hex where each character is repeated\n      //      ie: #060 => #006600 (green)\n      if (color1.length == 4)\n          color1 = color1[1] + color1[1] + color1[2] + color1[2] + color1[3] + color1[3];\n      else\n          color1 = color1.substring(1);\n      if (color2.length == 4)\n          color2 = color2[1] + color2[1] + color2[2] + color2[2] + color2[3] + color2[3];\n      else\n          color2 = color2.substring(1);   \n\n      // 3: we have valid input, convert colors to rgb\n      color1 = [parseInt(color1[0] + color1[1], 16), parseInt(color1[2] + color1[3], 16), parseInt(color1[4] + color1[5], 16)];\n      color2 = [parseInt(color2[0] + color2[1], 16), parseInt(color2[2] + color2[3], 16), parseInt(color2[4] + color2[5], 16)];\n\n      // 4: blend\n      var color3 = [ \n          (1 - percentage) * color1[0] + percentage * color2[0], \n          (1 - percentage) * color1[1] + percentage * color2[1], \n          (1 - percentage) * color1[2] + percentage * color2[2]\n      ];\n      return this.intToHex(color3[0]) + this.intToHex(color3[1]) + this.intToHex(color3[2]);\n    },\n    toogleDMXActive: function() {\n      this.$store.commit(\"SetDMXActive\", !this.$store.state.dmxActive);\n    },\n    init: function() {\n      this.keyframes.forEach(function(element) {\n        var globalFrame = element.start;\n        var frame = 0;\n        while(globalFrame < element.end) {\n          var rgb_blend = this.blendColors(\n            '#' + this.parseRGB(element.to),\n            '#' + this.parseRGB(element.from),\n            this.map(frame, 0, element.end - element.start, 1.0, 0.0)\n          );\n          var wauv_blend = this.blendColors(\n            '#' + this.parseWAUV(element.to),\n            '#' + this.parseWAUV(element.from),\n            this.map(frame, 0, element.end - element.start, 1.0, 0.0)\n          );\n\n          this.animations[globalFrame] = {\n            color: rgb_blend + wauv_blend,\n            running: element.animated,\n            fade: element.fade\n          };\n\n          // console.log('[', element.start, ',', element.end, '],', globalFrame, rgb_blend + wauv_blend);\n\n          globalFrame += 25;\n          frame += 25;\n        }\n      }, this);\n      var path = 'all/' + this.colorStart + '/1';\n      this.sendHttpRequest(path);\n    },\n    animate: function () {\n      if (!this.$store.state.isPlaying) {\n        return;\n      }\n      \n      var delta = Date.now() - this.start;\n      if (delta > this.$store.state.interval) {\n        this.$store.commit(\n          \"SetCurrentFrame\",\n          this.$store.state.currentFrame + 1\n        );\n\n        if (\n            this.$store.state.currentFrame >=\n            (Object.keys(this.$store.state.currentJSONData[\"red\"].positions).length *\n            this.$store.state.fps)\n          ) {\n            this.$store.commit(\"SetAnimationStatus\", false);\n            this.$store.commit(\"SetCurrentFrame\", 0);\n            this.clear();\n            return;\n        }\n      }\n    },\n    update: function(name, frameIdx, maxFrames) {\n      var state = this.$store.state;\n      if (state.currentJSONData[name]) {\n        var positions = state.currentJSONData[name].positions[frameIdx];\n        if (positions !== undefined) {\n          positions.forEach(pos => {\n            // TODO Check if still needed for new animations.\n            this.lruLEDs.enqueue(pos);\n            if (this.lruLEDs.size() > this.lruThreshold) {\n              this.lruLEDs.dequeue();\n            }\n            // update leds accordingly\n            this.leds[pos - 2] = 30;\n            this.leds[pos - 1] = 0;\n            this.leds[pos] = 0;\n            this.leds[pos + 1] = 0;\n            this.leds[pos + 2] = 30;\n          });\n        }\n      }\n    },\n    clear: function() {\n      for (let i = 0; i < this.leds.length; i++) {\n        this.leds[i] = 100;\n      }\n    },\n    send: function(frameIdx, maxFrames) {\n      var state = this.$store.state;\n      if (state.currentJSONData[\"red\"]) {\n        for (let pos = 1; pos <= this.leds.length; pos++) {\n          if (this.animations[frameIdx].running) {\n            var value = this.leds[pos - 1];\n            if (value < 100) {\n              var rgb_blend = this.blendColors(\n                '#' + this.parseRGB(this.animations[frameIdx].color),\n                '#000000',\n                this.map(value, 0, 100, 1.0, 0.0)\n              );\n              var wauv_blend = this.blendColors(\n                '#' + this.parseWAUV(this.animations[frameIdx].color),\n                '#000000',\n                this.map(value, 0, 100, 1.0, 0.0)\n              );\n              var fade = this.animations[frameIdx].fade;\n              var path = pos + '/' + rgb_blend + wauv_blend + '/500';\n              this.sendHttpRequest(path);\n            } else {\n              var path = pos + '/' + this.animations[frameIdx].color + '/500';\n              this.sendHttpRequest(path);\n            }\n          } else {\n            var path = pos + '/' + this.animations[frameIdx].color + '/500';\n            this.sendHttpRequest(path);\n          }\n          // if (this.animations[frameIdx].running && this.leds[pos - 1] == 0) {\n          //   var path = pos + '/000000000000/500';\n          //   this.sendHttpRequest(path);\n          // } else {\n          //   var path = pos + '/' + this.animations[frameIdx].color + '/500';\n          //   this.sendHttpRequest(path);\n          // }\n        }\n      }\n    },\n    process: function() {\n      if (this.$store.state.dmxActive) {\n        var state = this.$store.state;\n        var frameIdx = state.currentFrame;\n        var mainSeq = 'red';\n        var maxFrames = Object.keys(\n          state.currentJSONData[mainSeq].positions).length *\n          state.fps;\n        \n        if (state.currentJSONData[mainSeq]) {\n          var positions = state.currentJSONData[mainSeq].positions[frameIdx];\n          if (positions !== undefined) {\n            this.clear();\n            this.update('red', frameIdx, maxFrames);\n            this.send(frameIdx, maxFrames);\n          }\n        }\n        // this.animationOne(frameIdx, maxFrames, pos);\n        // this.animationTwo(frameIdx, maxFrames, pos);\n      }      \n    },\n    sendHttpRequest: function(path) {\n      const options = {\n        hostname: '192.168.1.200',\n        port: 3000,\n        path: '/' + path,\n        method: 'GET'\n      }\n      // var url = 'http://' + options.hostname + ':' + options.port + options.path\n      // console.log('Sending request', url);\n\n      const req = http.request(options, res => {\n        res.on('data', d => {\n          process.stdout.write(d)\n        })\n      });\n\n      req.on('error', error => {\n        console.error(error)\n      });\n\n      req.end();\n    },\n    checkServerStatus: function() {\n      const options = {\n        hostname: '192.168.1.200',\n        port: 3000,\n        path: '/',\n        method: 'GET'\n      }\n\n      const req = http.request(options, res => {\n          // console.log(`statusCode: ${res.statusCode}`);\n          this.$store.commit(\"SetDMXConnected\", true);\n      });\n \n\n      req.on('error', error => {\n        console.error(error)\n        console.log('Server not reachable...')\n        this.$store.commit(\"SetDMXConnected\", false);\n      });  \n\n      req.end();\n    },\n    togglePlay: function(event) {\n      if (event.code == \"Space\") {\n        if (this.$store.state.isPlaying) {\n          this.$store.commit(\"SetAnimationStatus\", false);\n        } else {\n          this.$store.commit(\"SetAnimationStatus\", true);\n        }\n      }\n\n    },\n    directOff: function() {\n      this.sendHttpRequest('all/000000000000/1');\n    },\n    directWhite: function() {\n      this.sendHttpRequest('all/ffffffffff00/1');\n    }\n  },\n  mounted() {\n    this.init();\n    this.checkServerStatus();\n\n    setInterval(function(){\n        this.animate();\n    }.bind(this), 1000 / this.$store.state.fps);\n\n    // setInterval(function(){\n    //     this.checkServerStatus();\n    // }.bind(this), 5000);\n\n    this.$store.watch(\n      (state) => state.currentFrame, (oldVal, newVal) => this.process()\n    );\n  },\n  created() {\n    window.addEventListener(\"keypress\", this.togglePlay);\n  },\n  destroyed() {\n    window.removeEventListener('keypress', this.togglePlay);\n  },\n};\n</script>\n\n<style>\n#dmx-sender {\n  /* margin-top: 50px;\n  min-height: 32px;\n  width:20%; */\n  /* display: block;\n  height: 500%; */\n  height: 80px;\n}\n\n#dmx-sender button {\n  float: left;\n  background-color: #32bea6;\n  margin-right: 10px;\n}\n</style>"]}]}